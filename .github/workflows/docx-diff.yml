# TurboDocx DOCX Diff - Automated regression testing for HTML to DOCX conversion
# Compares DOCX output between base branch and PR branch to catch regressions
# Ensures consistent, high-quality document generation for html-to-docx library

name: TurboDocx DOCX Diff Report

on:
  pull_request:
    branches:
      - main
      - develop

jobs:
  docx-diff:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write  # Needed to post PR comments
      contents: read

    steps:
      - name: Get PR details
        id: pr
        run: |
          echo "base_ref=${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
          echo "head_ref=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT

      - name: Checkout base branch
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.base.sha }}
          path: baseline

      - name: Setup Node.js for baseline
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: baseline/package-lock.json

      - name: Install dependencies (baseline)
        working-directory: baseline
        run: npm ci

      - name: Generate baseline DOCX (HTML to DOCX conversion test)
        working-directory: baseline
        env:
          DETERMINISTIC_IDS: 'true'
        run: |
          npm test
          mv example-node.docx ../baseline.docx

      - name: Checkout PR branch
        uses: actions/checkout@v4
        with:
          path: current

      - name: Setup Node.js for current
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
          cache-dependency-path: current/package-lock.json

      - name: Install dependencies (current)
        working-directory: current
        run: npm ci

      - name: Generate current DOCX (HTML to DOCX conversion test)
        working-directory: current
        env:
          DETERMINISTIC_IDS: 'true'
        run: |
          npm test
          mv example-node.docx ../current.docx

      - name: Run TurboDocx DOCX diff analysis
        id: diff
        working-directory: current
        run: |
          node scripts/diff-docx.js ../baseline.docx ../current.docx --output ../diff-report.md || echo "diff_failed=true" >> $GITHUB_OUTPUT

      - name: Read TurboDocx diff report
        id: report
        run: |
          if [ -f diff-report.md ]; then
            {
              echo 'report<<EOF'
              cat diff-report.md
              echo EOF
            } >> $GITHUB_OUTPUT
          fi

      - name: Post TurboDocx DOCX diff report as PR comment
        if: steps.report.outputs.report != ''
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('diff-report.md', 'utf8');

            // Find existing comment
            const comments = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.data.find(comment =>
              comment.user.type === 'Bot' &&
              comment.body.includes('TurboDocx DOCX Diff Report')
            );

            const commentBody = `${report}\n\n---\n\n### ðŸš€ Powered by [TurboDocx](https://turbodocx.com) | [html-to-docx](https://github.com/TurboDocx/html-to-docx)\n**Automated DOCX regression testing** â€¢ Catch document generation bugs before they ship â€¢ 100% open source\n\n*Generated by TurboDocx DOCX Diff workflow â€¢ [Learn more](https://github.com/TurboDocx/html-to-docx/blob/develop/.github/workflows/docx-diff.yml)*`;

            if (botComment) {
              // Update existing comment
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              // Create new comment
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: commentBody
              });
            }

      - name: Upload TurboDocx DOCX diff report as artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: turbodocx-docx-diff-report
          path: |
            baseline.docx
            current.docx
            diff-report.md
          retention-days: 30

      - name: Verify DOCX regression test results
        if: steps.diff.outputs.diff_failed == 'true'
        run: |
          echo "::error::DOCX diff detected unexpected changes. Please review the diff report."
          exit 1
